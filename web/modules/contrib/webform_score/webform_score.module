<?php

/**
 * @file
 * This module provides scoring functionality to webform elements.
 */

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function webform_score_webform_submission_presave(\Drupal\webform\WebformSubmissionInterface $webform_submission) {
  \Drupal::service('webform_score.hooks')->webformSubmissionPreSave($webform_submission);
}

/**
 * Implements hook_entity_base_field_info().
 */
function webform_score_entity_base_field_info(\Drupal\Core\Entity\EntityTypeInterface $entity_type) {
  $fields = [];

  switch ($entity_type->id()) {
    case 'webform_submission':
      $fields['webform_score'] = \Drupal\Core\Field\BaseFieldDefinition::create('fraction')
        ->setLabel(t('Score'))
        ->setDisplayOptions('view', [
          'type' => 'fraction_percentage',
          'settings' => [
            'precision' => 0,
            'auto_precision' => FALSE,
          ],
          'weight' => 10,
        ]);
      break;

  }

  return $fields;
}

/**
 * Implements hook_entity_field_access().
 */
function webform_score_entity_field_access($operation, \Drupal\Core\Field\FieldDefinitionInterface $field_definition, \Drupal\Core\Session\AccountInterface $account, \Drupal\Core\Field\FieldItemListInterface $items = NULL) {
  switch ($field_definition->getName()) {
    case 'webform_score':
      switch ($operation) {
        case 'view':
          if ($account->hasPermission('view any submission score')) {
            return \Drupal\Core\Access\AccessResult::neutral()->cachePerPermissions();
          }
          if ($account->hasPermission('view own submission score') && $items && $items->getEntity()->isOwner($account)) {
            return \Drupal\Core\Access\AccessResult::neutral()
              ->cachePerUser()
              ->addCacheableDependency($items->getEntity());
          }

          $access = \Drupal\Core\Access\AccessResult::forbidden()->cachePerPermissions();

          if (!$account->hasPermission('view any submission score')) {
            $access->cachePerUser();
            if ($items) {
              $access->addCacheableDependency($items->getEntity());
            }
          }
          return $access;

          break;

        case 'edit':
          return \Drupal\Core\Access\AccessResult::forbidden('The field value is calculated automatically upon saving.');
          break;

        default:
          return \Drupal\Core\Access\AccessResult::neutral();
          break;
      }
      break;
  }

  return \Drupal\Core\Access\AccessResult::neutral();
}

