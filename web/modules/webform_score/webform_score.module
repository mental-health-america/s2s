<?php

/**
 * @file
 * Contains webform_score.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function webform_score_theme($existing, $type, $theme, $path) {
  $info = [
    'webform_submission_score_html' => [
      'variables' => ['webform' => NULL, 'webform_submission' => NULL, 'submission_score' => NULL],
    ],
    'webform_submission_score_text' => [
      'variables' => ['webform' => NULL, 'webform_submission' => NULL, 'submission_score' => NULL],
    ],
  ];

  foreach ($info as &$template) {
    $template['file'] = 'includes/webform_score.theme.inc';
  }

  return $info;
}

/**
 * Implements hook_form_alter().
 */
function webform_score_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch($form_id) {
    case 'webform_ui_element_form':
      $webform = $form_state->getBuildInfo()['args'][0];
      $element_key = $form_state->getBuildInfo()['args'][1];
      $webform_element = $form_state->getStorage()['element_properties'];
      $webform_score = Drupal::getContainer()->get('webform_score.service');

      // Add score fields.
      $form += $webform_score->buildElementForm($webform, $element_key, $webform_element['type']);
      // Add custom submit callback.
      $form['#submit'][] = 'webform_score_ui_element_form_submit';
      break;
    case 'webform_ui_element_delete_form':
      $form['#submit'][] = 'webform_score_ui_element_delete_form_submit';
      break;
    case 'webform_form':
    case 'webform_source_form':
      if (isset($form['elements']) && ($form['elements']['#mode'] == 'yaml')) {
        Drupal::getContainer()->get('webform_score.service')->alterWebformSourceForm($form, $form_state, $form_id);
      }
      if (isset($form['actions']['submit']['#submit'])) {
        array_unshift($form['actions']['submit']['#submit'],'webform_score_webform_source_form_submit');
      } else {
        array_unshift($form['#submit'], 'webform_score_webform_source_form_submit');
      }
      break;
  }
}

/**
 * Form submit handler.
 */
function webform_score_ui_element_form_submit($form, FormStateInterface $form_state) {
  $webform = $form_state->getBuildInfo()['args'][0];
  $element_key = $form_state->getBuildInfo()['args'][1];
  $webform_element = $form_state->getStorage()['element_properties'];
  $values = $form_state->getValues();
  Drupal::getContainer()->get('webform_score.service')->submitElementForm($webform, $element_key, $webform_element['type'], $values);
}

function webform_score_ui_element_delete_form_submit($form, FormStateInterface $form_state) {
  $webform = $form_state->getBuildInfo()['args'][0];
  $element_id = $form_state->getBuidInfo()['args'][1];
  Drupal::getContainer()->get('webform_score.service')->deleteWebformElement($webform, $element_id);
}

function webform_score_webform_source_form_submit($form, FormStateInterface &$form_state) {
  Drupal::getContainer()->get('webform_score.service')->submitWebformSourceForm($form, $form_state);
}

/**
 * Implements hook_entity_insert().
 */
function webform_score_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {
  $webformEntity = 'Drupal\webform\Entity\WebformSubmission';
  if($entity instanceof $webformEntity){
    // Get score service and save submission.
    Drupal::getContainer()->get('webform_score.service')->saveSubmission($entity);
  }
}

/**
 * Implements hook_entity_delete().
 */
function webform_score_entity_delete(Drupal\Core\Entity\EntityInterface $entity) {
  $webformSubmissionEntity = 'Drupal\webform\Entity\WebformSubmission';
  $webformEntity = 'Drupal\webform\Entity\Webform';

  if ($entity instanceof $webformSubmissionEntity) {
    Drupal::getContainer()->get('webform_score.service')->deleteSubmission($entity->id());
  }
  elseif ($entity instanceof $webformEntity) {
    Drupal::getContainer()->get('webform_score.service')->deleteWebform($entity->id());
  }

}

/**
 * Implements hook_preprocess_HOOK().
 */
function webform_score_preprocess_webform_submission_html(&$variables) {
  // Does this submission have score data?
  if ($submission_score = Drupal::getContainer()->get('webform_score.service')->renderSubmission($variables['webform_submission'])) {
    $variables['data'] = array('score' => $submission_score) + $variables['data'];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function webform_score_preprocess_webform_submission_text(&$variables) {
  // Does this submission have score data?
  if ($submission_score = Drupal::getContainer()->get('webform_score.service')->renderSubmission($variables['webform_submission'],'text')) {
    $variables['data']['score'] = $submission_score;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function webform_score_preprocess_webform_submission_yaml(&$variables) {
  // Does this submission have score data?
  if ($submission_score = Drupal::getContainer()->get('webform_score.service')->renderSubmission($variables['webform_submission'],'yaml')) {
    $variables['yaml']['#markup'] .= "\n" . $submission_score;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function webform_score_preprocess_webform_submission_table(&$variables) {
  // Does this submission have score data?
  if ($submission_score = Drupal::getContainer()->get('webform_score.service')->renderSubmission($variables['webform_submission'])) {
    $variables['table'] = array('score' => $submission_score, 'table' => $variables['table']);
  }
}



